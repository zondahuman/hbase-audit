

create_namespace 'BUS_TEST'
list_namespace

create 'BUS_TEST:ORDER_TEST',{NAME=>'cf1',VERSIONS=>3}


disable 'BUS_TEST:ORDER_TEST'
drop 'BUS_TEST:ORDER_TEST'
create 'BUS_TEST:ORDER_TEST',{NAME=>'cf',VERSIONS=>1}
scan 'BUS_TEST:ORDER_TEST'
count 'BUS_TEST:ORDER_TEST'



disable 'BUS_TEST:CHECK_TEST'
drop 'BUS_TEST:CHECK_TEST'
create 'BUS_TEST:CHECK_TEST',{NAME=>'cf',VERSIONS=>1}
scan 'BUS_TEST:CHECK_TEST'
count 'BUS_TEST:CHECK_TEST'




scan 'BUS_TEST:ORDER_TEST',{COLUMNS=>['C:punish_order_id'], LIMIT=>20}
scan 'TEST_NS:TEST_TABLENAME',{COLUMNS=>['f:order_id'], LIMIT=>20}
describe 'TEST_NS:TEST_TABLENAME'
 scan 'TEST_NS:TEST_TABLENAME',{COLUMNS => 'f:*'}
scan 'TEST_NS:TEST_TABLENAME',{COLUMNS => 'f:order_id'}


# 语法：get <table>,<rowkey>,[<family:column>,....]
# 例如：查询表t1，rowkey001中的f1下的col1的值
hbase(main)> get 't1','rowkey001', 'f1:col1'
# 或者：
hbase(main)> get 't1','rowkey001', {COLUMN=>'f1:col1'}
get 'BUS_TEST:ORDER_TEST','01d89565971792633381227677372551854','C:punish_order_id'












scan 'BUS_TEST:ORDER_TEST', {COLUMNS=>'C:hive_reload', LIMIT=>3, TIMERANGE => [1548820800000,1549820800000]}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS=>'C', LIMIT=>3, TIMERANGE => [1548820800000,1549820800000]}

scan 'BUS_TEST:ORDER_TEST', {COLUMNS=>'C:audit_order_id', LIMIT=>1000, TIMERANGE => [1548820800000,1549820800000]}


get 'BUS_TEST:ORDER_TEST','92067580542282000537'
get 'BUS_TEST:ORDER_TEST','92067580542282000537','C:punish_order_id'





scan 'BUS_TEST:ORDER_TEST', {STARTROW => '92067580542282000537', FILTER=>"ColumnPrefixFilter('audit')"}
scan 'BUS_TEST:ORDER_TEST', { COLUMNS => ['C'], LIMIT=>10, ATTRIBUTES => {'audit_order_id' => '92067580542282000537'}}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, STARTROW => '92067580542282000537'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, STARTROW => '92067580542282000537'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, FILTER=>"PrefixFilter('punish')", STARTROW => '92067580542282000537'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, FILTER => QualifierFilter.new(CompareFilter::CompareOp::EQUAL, 'punish', STARTROW => '92067580542282000537'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, FILTER => QualifierFilter.new(CompareFilter::CompareOp::EQUAL, 'punish'), STARTROW => '92067580542282000537'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, FILTER => "(PrefixFilter ('92067580542282000537') AND (QualifierFilter (>=, 'binary:punish'))",  STARTROW => '92067580542282000537'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, FILTER => "(PrefixFilter ('92067580542282000537') AND (QualifierFilter (>=, 'binary:punish'))"}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, FILTER => "(PrefixFilter ('92067580542282000537') AND (QualifierFilter (>=, 'binary:\x70756e697368'))"}



scan ‘qy’,{FILTER=>”PrefixFilter(‘001’)”}

scan 't1', {FILTER => "(PrefixFilter ('92067580542282000537') AND (QualifierFilter (>=, 'binary:punish'))"}

scan 't1', {FILTER => "(PrefixFilter ('row2') AND
    (QualifierFilter (>=, 'binary:xyz'))) AND (TimestampsFilter ( 123, 456))"}


hbase(main):011:0>  scan 'test', { FILTER => QualifierFilter.new(CompareFilter::CompareOp::GREATER, 'dummy')}




 scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10,STARTROW => '92067580542282000537', FILTER=>"ColumnPrefixFilter('punish')"}
 scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10,STARTROW => '92067580542282000537', FILTER=>"ColumnPrefixFilter('audit')"}
 scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10,STARTROW => 'cf4d7563922903965696', FILTER=>"ColumnPrefixFilter('audit')"}


scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, STARTROW => 'cf4d7563922903965696'}


scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, STARTROW => '90833580542429409595'}
scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, STARTROW => 'd89331234567892'}






scan 'BUS_TEST:ORDER_TEST', {COLUMN=>'C'}
scan 'BUS_TEST:ORDER_TEST', {COLUMN=>'C:audit_driver_id'}

scan 'BUS_TEST:ORDER_TEST', {COLUMNS => ['C'], LIMIT => 10, STARTROW => '2452137367597536724370'}

删除表数据
truncate 'BUS_TEST:ORDER_TEST'






























